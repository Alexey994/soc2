{"version":3,"file":"static/js/924.d53596d1.chunk.js","mappings":"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","sources":["Hook/withAuthRedirect.js","webpack://soc/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileWithStatusHook.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://soc/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://soc/./src/components/Profile/MyPosts/Post/Posts.module.css?ee55","components/Profile/MyPosts/Post/Posts.jsx","components/Profile/MyPosts/AddPostForm/AddPostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/Post/MyPostContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileInfo/ProfileContainer.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) =>( {\r\n    isAuth: state.auth.isAuth });\r\n\r\n\r\n    export const withAuthRedirect = (Component) => {\r\n        class RedirectComponent extends React.Component {\r\n            render(){\r\n                if(this.props.isAuth){\r\n                    return <Component {...this.props}/>\r\n                }else if(!this.props.isAuth && !this.props.router){\r\n                    return <Navigate to='/login'/>\r\n                }else {\r\n                    if(!this.props.isAuth && !this.props.router.params.userId){\r\n                        return <Navigate to='/login'/>\r\n                    } else {\r\n                        if(!this.props.isAuth && this.props.router.params.userId) return <Component {...this.props}/>\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return compose(connect(mapStateToPropsForRedirect, {}))((RedirectComponent));\r\n    }","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__nueRN\",\"imgg\":\"ProfileInfo_imgg__FILhk\"};","\r\nimport React from \"react\"\r\nimport { useState ,  useEffect } from \"react\";\r\n\r\n\r\nconst ProfileWithStatusHook = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status , setStatus] = useState(props.status);\r\n    let [test , setTest] = useState(0);\r\n    \r\n\r\n    const testF = ()=>{\r\n        setTest(test + 1)\r\n    }\r\n    const testF2 = ()=>{\r\n        setTest(test - 1)\r\n    }\r\n\r\n    useEffect(() => {\r\n      setStatus(props.status)\r\n    },[props.status])\r\n    \r\n\r\n   const activateEditMode = () => {\r\n    setEditMode(true);\r\n   }\r\n\r\n   const deaActivateEditMode = () => {\r\n    setEditMode(false);\r\n   props.updateStatus(status);\r\n   debugger\r\n    alert(status)\r\n   \r\n \r\n    }\r\n\r\n\r\nconst onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value)\r\n}\r\n\r\nreturn (\r\n    <>\r\n    <div>\r\n        {!editMode &&\r\n        <div>\r\n            <span onDoubleClick={activateEditMode}>{props.status || '---------' }</span>\r\n            <h1>TEST count {test}</h1>\r\n            <button onClick={testF}>  CLICK + </button>\r\n            <button onClick={testF2}> CLICK - </button>\r\n       </div>\r\n}\r\n      {editMode &&\r\n    <div>\r\n        <input \r\n        onChange={onStatusChange} \r\n        autoFocus={true} \r\n        onBlur={deaActivateEditMode} \r\n        value={status}/>\r\n   </div>\r\n       }\r\n    </div>\r\n     </>\r\n    \r\n    \r\n)\r\n}\r\n\r\nexport default ProfileWithStatusHook","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/Pleloader/Preloader/Preloaer\";\r\nimport ProfileWithStatusHook from \"./ProfileWithStatusHook\";\r\n\r\nconst ProfileInfo = ({profile , status , updateStatus}) => {\r\n   if(!profile){\r\n    return <Preloader/>\r\n   }\r\n    return (\r\n        <div>\r\n            <div>\r\n              <img className={s.imgg} src='https://s1.1zoom.ru/big3/984/Canada_Parks_Lake_Mountains_Forests_Scenery_Rocky_567540_3840x2400.jpg' alt={'gg'} />\r\n           </div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large} alt={\"img\"}/>\r\n                Ava + discription\r\n                <ProfileWithStatusHook status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo\r\n\r\n\r\n ","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__+A3el\",\"posts\":\"MyPosts_posts__i6A7C\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Posts_item__Fbahu\"};","import React from \"react\";\r\nimport s from \"./Posts.module.css\";\r\n\r\nconst Posts = (props) => {\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.item}>\r\n        <img\r\n          src=\"https://w7.pngwing.com/pngs/948/148/png-transparent-computer-icons-user-avatar-avatar-heroes-monochrome-silhouette.png\"\r\n          alt=\"e\"\r\n        />\r\n        {props.message}\r\n        <div style={{color:'lightblue'}}>\r\n          <span style={{color:'pink'}}>like</span> {props.likeCount}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","import React from \"react\";\r\nimport { Field , reduxForm } from \"redux-form\";\r\nimport { FormControl} from \"../../../common/FormsControl/FormsControl\";\r\nimport { maxLengthCreator, minLengthCreator, required } from \"../../../utils/validators\";\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\nconst minLength3 = minLengthCreator(3);\r\n\r\nconst AddPostForm = (props) => {\r\n   return (\r\n   <form onSubmit={props.handleSubmit}> \r\n      <div>\r\n        <Field child={\"input\"} component={FormControl} validate={[required,maxLength10, minLength3]} name={\"newPostText\"} placeholder={\"Enter\"} type={\"text\"}/>\r\n      </div>\r\n      <div><button>Add Post</button></div>\r\n   </form>\r\n   )\r\n}\r\nexport default  reduxForm({form: \"profile-add-post\"})(AddPostForm)\r\n\r\n","import React from \"react\"\r\nimport s from './MyPosts.module.css'\r\nimport Posts from \"./Post/Posts\";\r\n//import { Field , reduxForm } from \"redux-form\";\r\n//import { addPostActionCreator,updateNewPostTextActionCreator } from \"../../../Redux/profileReducer\";\r\n//import { FormControl} from \"../../common/FormsControl/FormsControl\";\r\n//import { maxLengthCreator, minLengthCreator, required} from \"../../utils/validators\";\r\nimport AddPostForm from \"./AddPostForm/AddPostForm\";\r\nimport { memo } from \"react\";\r\n\r\n/*const maxLength10 = maxLengthCreator(10);\r\nconst minLength3 = minLengthCreator(3);\r\n\r\n\r\nlet AddMyPostForm = (props) => {\r\n    return (\r\n    <form onSubmit={props.handleSubmit}>\r\n                <Field child=\"textarea\" component={FormControl} validate={[required, maxLength10, minLength3]} placeholder=\"Login\" name=\"newPostText\" type=\"text\"/>\r\n                    <div>\r\n                    <button>Add Posts</button>\r\n            </div>\r\n    </form>\r\n    );\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form :\"ProfileAddNewPostForm\"})(AddMyPostForm);*/\r\n\r\nconst MyPosts = memo((props) => {\r\n   \r\n        let postsElements =props.posts.map(p =>\r\n        <Posts message={p.message} likeCount={p.likeCount} key={p.id}\r\n       />)\r\n        \r\n        let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n        alert(values.newPostText)\r\n    }\r\n\r\n return (\r\n            <div className={s.postsBlock}>\r\n               <h3 style={{color:'yellow'}}>My Posts</h3>\r\n               <AddPostForm onSubmit={onAddPost}/>\r\n                <div className={s.posts}>\r\n                    {postsElements}\r\n            </div>\r\n            </div>\r\n        \r\n    );\r\n})\r\n\r\nexport default MyPosts","import {addPostActionCreator} from \"../../../../Redux/profileReducer\";\r\nimport MyPosts from \"../MyPosts\";\r\nimport {connect} from 'react-redux'\r\n\r\n/*const MyPostsContainer = (props) => {\r\n   //let state = props.store.getState();\r\n   return (\r\n      <storeContext.Consumer>\r\n        { \r\n        (store)=>{\r\n\r\n         let state = store.getState();\r\n         let addPost = () => {\r\n            store.dispatch(addPostActionCreator());\r\n         };\r\n      \r\n         let onPostChange = (text) => {\r\n            let action = updateNewPostTextActionCreator(text);\r\n           store.dispatch(action);\r\n         };\r\n\r\n     return  <MyPosts\r\n            updateNewPostText={onPostChange}\r\n            addPost={addPost}\r\n            posts={state.profilePage.posts}\r\n            newPostText={store.getState().profilePage.newPostText}\r\n         />}}\r\n      </storeContext.Consumer>\r\n\r\n   );\r\n};*/\r\n\r\nconst mapStateToProps = (state) =>{\r\nreturn {\r\nposts: state.profilePage.posts,\r\n//newPostText: state.profilePage.newPostText\r\n}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n return {\r\n\r\n   addPost:(newPostText) => {\r\ndispatch(addPostActionCreator(newPostText));\r\n   },\r\n }\r\n}\r\nconst PostsContainer = connect(mapStateToProps , mapDispatchToProps)(MyPosts)\r\nexport default PostsContainer;\r\n","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/Post/MyPostContainer\";\r\n//import storeContext from \"../../storeContext\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n\r\n    return (\r\n    <div>\r\n       <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n       <MyPostsContainer/>\r\n   </div>\r\n    );\r\n}\r\n\r\nexport default Profile","import React from \"react\";\r\nimport Profile from \"../Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUserProfile , getStatus , updateStatus } from \"../../../Redux/profileReducer\";\r\nimport { useLocation , useNavigate , useParams }  from 'react-router-dom';\r\nimport { withAuthRedirect } from \"../../../Hook/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\n\r\n\r\n\r\nexport class ProfileContainer extends React.Component {\r\n\r\n    componentDidMount(){\r\n        let userId = this.props.router.params.userId;\r\n        if(!userId){\r\n            userId = this.props.authorizedUserId;\r\n            if(!userId){\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n       this.props.getUserProfile(userId);\r\n       this.props.getStatus(userId);\r\n      \r\n    }\r\n    render(){\r\n        return (\r\n            <Profile {...this.props} \r\n            profile={this.props.profile} \r\n            status={this.props.status} \r\n            updateStatus={this.props.updateStatus}/>\r\n    )\r\n }\r\n}\r\n\r\nlet mapStateToProps = (state) =>( {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth : state.auth.isAuth,\r\n  \r\n })\r\n\r\n function withRouter(Component) {\r\n    function ComponentWithRouterProp(props) {\r\n      let location = useLocation();\r\n      let navigate = useNavigate();\r\n      let params = useParams();\r\n    \r\n      return (\r\n        <Component\r\n          {...props}\r\n          router={{ location, navigate, params }}\r\n        />\r\n      );\r\n    }\r\n  \r\n    return ComponentWithRouterProp;\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile , getStatus , updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect,\r\n)(ProfileContainer);\r\n\r\n"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","router","params","userId","to","React","compose","connect","useState","editMode","setEditMode","status","setStatus","test","setTest","useEffect","onDoubleClick","onClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","alert","profile","className","s","src","alt","photos","large","message","style","color","likeCount","maxLength10","maxLengthCreator","minLength3","minLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","child","component","FormControl","validate","required","name","placeholder","type","memo","postsElements","posts","map","p","id","values","addPost","newPostText","profilePage","dispatch","addPostActionCreator","MyPosts","ProfileContainer","authorizedUserId","history","push","getUserProfile","getStatus","location","useLocation","navigate","useNavigate","useParams"],"sourceRoot":""}