{"version":3,"file":"static/js/903.18767ffc.chunk.js","mappings":"oOAKIA,EAA6B,SAACC,GAAK,MAAM,CACzCC,OAAQD,EAAME,KAAKD,OAAQ,EAGdE,EAAmB,SAACC,GAAe,IACtCC,EAAiB,qGAalB,OAbkB,8BACnB,WACI,OAAGC,KAAKC,MAAMN,QACH,SAACG,GAAS,UAAKE,KAAKC,SACrBD,KAAKC,MAAMN,QAAWK,KAAKC,MAAMC,UAGnCF,KAAKC,MAAMN,QAAWK,KAAKC,MAAMC,OAAOC,OAAOC,SAG3CJ,KAAKC,MAAMN,QAAUK,KAAKC,MAAMC,OAAOC,OAAOC,QAAe,SAACN,GAAS,UAAKE,KAAKC,aAArF,GALG,SAAC,KAAQ,CAACI,GAAG,UAQ5B,KAAC,EAbkB,CAASC,EAAAA,WAehC,OAAOC,EAAAA,EAAAA,KAAQC,EAAAA,EAAAA,IAAQf,EAA4B,CAAC,GAA7Cc,CAAkDR,EAC7D,C,sGCzBJ,G,QAAA,CAAgB,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,4B,mBCa5I,EAVmB,SAACE,GAClB,IAAIQ,EAAO,YAAcR,EAAMS,GAC/B,OACE,gBAAKC,UAAS,UAAKC,EAAAA,OAAQ,YAAIA,EAAAA,QAAW,UACxC,SAAC,KAAO,CAACP,GAAII,EAAK,SAAER,EAAMY,QAGhC,ECAA,EANgB,SAACZ,GACf,OAAO,gBAAKU,UAAWC,EAAAA,OAAS,SAAEX,EAAMa,SAC1C,E,iDCFMC,GAAcC,EAAAA,EAAAA,IAAiB,GAC/BC,GAAaC,EAAAA,EAAAA,IAAiB,GAepC,GAAeC,EAAAA,EAAAA,GAAU,CAACC,KAAO,2BAAjC,EAbuB,SAACnB,GACtB,OACE,kBAAMoB,SAAUpB,EAAMqB,aAAa,WAC9B,0BACI,SAACC,EAAA,EAAK,CAACC,MAAM,QAAQC,UAAWC,EAAAA,EAAaC,SAAU,CAACC,EAAAA,GAASb,EAAaE,GAAcJ,KAAM,iBAAkBgB,YAAa,qBAAsBC,KAAK,YAE3J,0BACI,4BAAQ,aAI1B,ICuBA,EA/BgB,SAAC7B,GAEf,IAAIP,EAAQO,EAAM8B,YAEdC,EAAiBtC,EAAMuC,QAAQC,KAAI,SAACC,GAAC,OACvC,SAAC,EAAU,CAACtB,KAAQsB,EAAEtB,KAAiBH,GAAKyB,EAAEzB,IAAbyB,EAAEzB,GAAiB,IAGlD0B,EAAkB1C,EAAM2C,SAASH,KAAI,SAACI,GAAC,OACzC,SAAC,EAAO,CAACxB,QAAWwB,EAAExB,SAAcwB,EAAE5B,GAAM,IAQhD,OAAIT,EAAMN,QAEN,iBAAKgB,UAAWC,EAAAA,QAAU,WACxB,gBAAKD,UAAWC,EAAAA,aAAe,SAAEoB,KACjC,0BACE,gBAAKrB,UAAWC,EAAAA,SAAW,UACzB,yBAAMwB,SAGf,SAAC,EAAc,CAACf,SAdG,SAACkB,GACnBtC,EAAMuC,YAAYD,EAAOE,gBACzBC,MAAMH,EAAOE,eACf,QAEyB,SAAC,KAAQ,CAACpC,GAAI,UAYvC,ECOA,GAAeE,E,QAAAA,KACbC,EAAAA,EAAAA,KAjBoB,SAACd,GACvB,MAAO,CACLqC,YAAarC,EAAMqC,YAErB,IAGyB,SAACY,GACxB,MAAO,CACLH,YAAa,SAACC,GACZE,GAASC,EAAAA,EAAAA,GAAmBH,GAC9B,EAEJ,IAKE5C,EAAAA,EAFF,CAGEgD,E","sources":["Hook/withAuthRedirect.js","webpack://soc/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Message/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) =>( {\r\n    isAuth: state.auth.isAuth });\r\n\r\n\r\n    export const withAuthRedirect = (Component) => {\r\n        class RedirectComponent extends React.Component {\r\n            render(){\r\n                if(this.props.isAuth){\r\n                    return <Component {...this.props}/>\r\n                }else if(!this.props.isAuth && !this.props.router){\r\n                    return <Navigate to='/login'/>\r\n                }else {\r\n                    if(!this.props.isAuth && !this.props.router.params.userId){\r\n                        return <Navigate to='/login'/>\r\n                    } else {\r\n                        if(!this.props.isAuth && this.props.router.params.userId) return <Component {...this.props}/>\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return compose(connect(mapStateToPropsForRedirect, {}))((RedirectComponent));\r\n    }","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__L76fK\",\"dialogsItems\":\"Dialogs_dialogsItems__wIHM9\",\"active\":\"Dialogs_active__1147J\",\"messages\":\"Dialogs_messages__q-yCX\"};","import React from \"react\";\r\nimport s from \"../Dialogs.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n  let path = \"/dialogs/\" + props.id;\r\n  return (\r\n    <div className={`${s.dialog} ${s.active}`}>\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport s from \"../Dialogs.module.css\";\r\n\r\n\r\n\r\nconst Message = (props) => {\r\n  return <div className={s.dialog}>{props.message}</div>;\r\n};\r\n\r\n\r\n\r\nexport default Message;\r\n","import React from \"react\"\r\nimport { Field , reduxForm } from \"redux-form\"\r\nimport { required, maxLengthCreator, minLengthCreator } from \"../../utils/validators\"\r\nimport { FormControl} from \"../../common/FormsControl/FormsControl\"\r\n\r\nconst maxLength10 = maxLengthCreator(4);\r\nconst minLength3 = minLengthCreator(3);\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n         <div>\r\n             <Field child=\"input\" component={FormControl} validate={[required,maxLength10, minLength3]}  name={\"newMessageBody\"} placeholder={\"Enter your message\"} type=\"text\"/>\r\n         </div>\r\n              <div>\r\n                  <button>Send</button>\r\n              </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default reduxForm({form : \"dialog-add-message-form\"})(AddMessageForm)\r\n","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport AddMessageForm from \"./Message/AddMessageForm\";\r\n\r\n\r\n//import { sendMessageCreator, updateNewMessageBodyCreator } from \"../../Redux/dialogsReducer\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n  let state = props.dialogsPage;\r\n\r\n  let dialogsElement = state.dialogs.map((d) => (\r\n    <DialogItem name = {d.name} key={d.id} id ={d.id} />\r\n  ));\r\n\r\n  let messagesElement = state.messages.map((m) => (\r\n    <Message message = {m.message} key={m.id} />\r\n  ));\r\n\r\nlet addNewMessage = (values) => {\r\n  props.sendMessage(values.newMessageBody)\r\n  alert(values.newMessageBody)\r\n}\r\n\r\nif(!props.isAuth) return <Navigate to={'/login'}/>;\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>{dialogsElement}</div>\r\n      <div>\r\n        <div className={s.messages}>\r\n          <div>{messagesElement}</div>\r\n      </div>\r\n    </div>\r\n <AddMessageForm onSubmit={addNewMessage}/>\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n\r\n\r\n","import { sendMessageCreator} from \"../../Redux/dialogsReducer\";\r\nimport {connect} from 'react-redux'\r\nimport { withAuthRedirect } from \"../../Hook/withAuthRedirect\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { compose } from \"redux\";\r\n\r\n/*const DialogsContainer = (props) => {\r\n  return (\r\n    <storeContext.Consumer>\r\n      { (store)=>{\r\n\r\nlet state = store.getState().dialogsPage;\r\n\r\n  \r\n  let onSendMessageClick = () => {\r\n   store.dispatch(sendMessageCreator());\r\n  }\r\n\r\n  let onNewMessageChange = (body) => {\r\n   store.dispatch(updateNewMessageBodyCreator(body));\r\n  }\r\n      \r\n   return <Dialogs \r\n   updateNewMessageBody={onNewMessageChange} \r\n   sendMessage={onSendMessageClick}\r\n   dialogsPage={state}/>\r\n      }}\r\n   </storeContext.Consumer>\r\n  );\r\n};\r\n*/\r\nlet mapStateToProps = (state) => {\r\nreturn {\r\n  dialogsPage: state.dialogsPage,\r\n     }\r\n}\r\n\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMessageCreator(newMessageBody));\r\n    },\r\n  }\r\n}\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect,\r\n)(Dialogs);"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","router","params","userId","to","React","compose","connect","path","id","className","s","name","message","maxLength10","maxLengthCreator","minLength3","minLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","child","component","FormControl","validate","required","placeholder","type","dialogsPage","dialogsElement","dialogs","map","d","messagesElement","messages","m","values","sendMessage","newMessageBody","alert","dispatch","sendMessageCreator","Dialogs"],"sourceRoot":""}